/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_DVFS_EXTRA_H
#define _MOCKMOD_DVFS_EXTRA_H

#include "unity.h"
#include "mod_dvfs_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_dvfs_extra_Init(void);
void Mockmod_dvfs_extra_Destroy(void);
void Mockmod_dvfs_extra_Verify(void);




#define mod_psu_device_api_set_voltage_IgnoreAndReturn(cmock_retval) mod_psu_device_api_set_voltage_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mod_psu_device_api_set_voltage_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_psu_device_api_set_voltage_StopIgnore() mod_psu_device_api_set_voltage_CMockStopIgnore()
void mod_psu_device_api_set_voltage_CMockStopIgnore(void);
#define mod_psu_device_api_set_voltage_ExpectAnyArgsAndReturn(cmock_retval) mod_psu_device_api_set_voltage_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_psu_device_api_set_voltage_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_psu_device_api_set_voltage_ExpectAndReturn(device_id, voltage, cmock_retval) mod_psu_device_api_set_voltage_CMockExpectAndReturn(__LINE__, device_id, voltage, cmock_retval)
void mod_psu_device_api_set_voltage_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t device_id, uint32_t voltage, int cmock_to_return);
typedef int (* CMOCK_mod_psu_device_api_set_voltage_CALLBACK)(fwk_id_t device_id, uint32_t voltage, int cmock_num_calls);
void mod_psu_device_api_set_voltage_AddCallback(CMOCK_mod_psu_device_api_set_voltage_CALLBACK Callback);
void mod_psu_device_api_set_voltage_Stub(CMOCK_mod_psu_device_api_set_voltage_CALLBACK Callback);
#define mod_psu_device_api_set_voltage_StubWithCallback mod_psu_device_api_set_voltage_Stub
#define mod_psu_device_api_set_voltage_IgnoreArg_device_id() mod_psu_device_api_set_voltage_CMockIgnoreArg_device_id(__LINE__)
void mod_psu_device_api_set_voltage_CMockIgnoreArg_device_id(UNITY_LINE_TYPE cmock_line);
#define mod_psu_device_api_set_voltage_IgnoreArg_voltage() mod_psu_device_api_set_voltage_CMockIgnoreArg_voltage(__LINE__)
void mod_psu_device_api_set_voltage_CMockIgnoreArg_voltage(UNITY_LINE_TYPE cmock_line);
#define mod_clock_api_set_rate_IgnoreAndReturn(cmock_retval) mod_clock_api_set_rate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mod_clock_api_set_rate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_clock_api_set_rate_StopIgnore() mod_clock_api_set_rate_CMockStopIgnore()
void mod_clock_api_set_rate_CMockStopIgnore(void);
#define mod_clock_api_set_rate_ExpectAnyArgsAndReturn(cmock_retval) mod_clock_api_set_rate_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_clock_api_set_rate_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_clock_api_set_rate_ExpectAndReturn(clock_id, rate, round_mode, requester_id, cmock_retval) mod_clock_api_set_rate_CMockExpectAndReturn(__LINE__, clock_id, rate, round_mode, requester_id, cmock_retval)
void mod_clock_api_set_rate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t clock_id, uint64_t rate, enum mod_clock_round_mode round_mode, unsigned int requester_id, int cmock_to_return);
typedef int (* CMOCK_mod_clock_api_set_rate_CALLBACK)(fwk_id_t clock_id, uint64_t rate, enum mod_clock_round_mode round_mode, unsigned int requester_id, int cmock_num_calls);
void mod_clock_api_set_rate_AddCallback(CMOCK_mod_clock_api_set_rate_CALLBACK Callback);
void mod_clock_api_set_rate_Stub(CMOCK_mod_clock_api_set_rate_CALLBACK Callback);
#define mod_clock_api_set_rate_StubWithCallback mod_clock_api_set_rate_Stub
#define mod_clock_api_set_rate_IgnoreArg_clock_id() mod_clock_api_set_rate_CMockIgnoreArg_clock_id(__LINE__)
void mod_clock_api_set_rate_CMockIgnoreArg_clock_id(UNITY_LINE_TYPE cmock_line);
#define mod_clock_api_set_rate_IgnoreArg_rate() mod_clock_api_set_rate_CMockIgnoreArg_rate(__LINE__)
void mod_clock_api_set_rate_CMockIgnoreArg_rate(UNITY_LINE_TYPE cmock_line);
#define mod_clock_api_set_rate_IgnoreArg_round_mode() mod_clock_api_set_rate_CMockIgnoreArg_round_mode(__LINE__)
void mod_clock_api_set_rate_CMockIgnoreArg_round_mode(UNITY_LINE_TYPE cmock_line);
#define mod_clock_api_set_rate_IgnoreArg_requester_id() mod_clock_api_set_rate_CMockIgnoreArg_requester_id(__LINE__)
void mod_clock_api_set_rate_CMockIgnoreArg_requester_id(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
