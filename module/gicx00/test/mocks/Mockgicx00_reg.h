/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKGICX00_REG_H
#define _MOCKGICX00_REG_H

#include "unity.h"
#include "gicx00_reg.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockgicx00_reg_Init(void);
void Mockgicx00_reg_Destroy(void);
void Mockgicx00_reg_Verify(void);




#define write_icc_sre_Ignore() write_icc_sre_CMockIgnore()
void write_icc_sre_CMockIgnore(void);
#define write_icc_sre_StopIgnore() write_icc_sre_CMockStopIgnore()
void write_icc_sre_CMockStopIgnore(void);
#define write_icc_sre_ExpectAnyArgs() write_icc_sre_CMockExpectAnyArgs(__LINE__)
void write_icc_sre_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define write_icc_sre_Expect(value) write_icc_sre_CMockExpect(__LINE__, value)
void write_icc_sre_CMockExpect(UNITY_LINE_TYPE cmock_line, uint64_t value);
typedef void (* CMOCK_write_icc_sre_CALLBACK)(uint64_t value, int cmock_num_calls);
void write_icc_sre_AddCallback(CMOCK_write_icc_sre_CALLBACK Callback);
void write_icc_sre_Stub(CMOCK_write_icc_sre_CALLBACK Callback);
#define write_icc_sre_StubWithCallback write_icc_sre_Stub
#define write_icc_sre_IgnoreArg_value() write_icc_sre_CMockIgnoreArg_value(__LINE__)
void write_icc_sre_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);
#define write_igrpen0_el1_Ignore() write_igrpen0_el1_CMockIgnore()
void write_igrpen0_el1_CMockIgnore(void);
#define write_igrpen0_el1_StopIgnore() write_igrpen0_el1_CMockStopIgnore()
void write_igrpen0_el1_CMockStopIgnore(void);
#define write_igrpen0_el1_ExpectAnyArgs() write_igrpen0_el1_CMockExpectAnyArgs(__LINE__)
void write_igrpen0_el1_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define write_igrpen0_el1_Expect(value) write_igrpen0_el1_CMockExpect(__LINE__, value)
void write_igrpen0_el1_CMockExpect(UNITY_LINE_TYPE cmock_line, uint64_t value);
typedef void (* CMOCK_write_igrpen0_el1_CALLBACK)(uint64_t value, int cmock_num_calls);
void write_igrpen0_el1_AddCallback(CMOCK_write_igrpen0_el1_CALLBACK Callback);
void write_igrpen0_el1_Stub(CMOCK_write_igrpen0_el1_CALLBACK Callback);
#define write_igrpen0_el1_StubWithCallback write_igrpen0_el1_Stub
#define write_igrpen0_el1_IgnoreArg_value() write_igrpen0_el1_CMockIgnoreArg_value(__LINE__)
void write_igrpen0_el1_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);
#define write_icc_pmr_Ignore() write_icc_pmr_CMockIgnore()
void write_icc_pmr_CMockIgnore(void);
#define write_icc_pmr_StopIgnore() write_icc_pmr_CMockStopIgnore()
void write_icc_pmr_CMockStopIgnore(void);
#define write_icc_pmr_ExpectAnyArgs() write_icc_pmr_CMockExpectAnyArgs(__LINE__)
void write_icc_pmr_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define write_icc_pmr_Expect(value) write_icc_pmr_CMockExpect(__LINE__, value)
void write_icc_pmr_CMockExpect(UNITY_LINE_TYPE cmock_line, uint64_t value);
typedef void (* CMOCK_write_icc_pmr_CALLBACK)(uint64_t value, int cmock_num_calls);
void write_icc_pmr_AddCallback(CMOCK_write_icc_pmr_CALLBACK Callback);
void write_icc_pmr_Stub(CMOCK_write_icc_pmr_CALLBACK Callback);
#define write_icc_pmr_StubWithCallback write_icc_pmr_Stub
#define write_icc_pmr_IgnoreArg_value() write_icc_pmr_CMockIgnoreArg_value(__LINE__)
void write_icc_pmr_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
