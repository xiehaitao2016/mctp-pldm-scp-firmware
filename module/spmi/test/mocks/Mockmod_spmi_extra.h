/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_SPMI_EXTRA_H
#define _MOCKMOD_SPMI_EXTRA_H

#include "unity.h"
#include "mod_spmi_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_spmi_extra_Init(void);
void Mockmod_spmi_extra_Destroy(void);
void Mockmod_spmi_extra_Verify(void);




#define mod_spmi_driver_send_command_IgnoreAndReturn(cmock_retval) mod_spmi_driver_send_command_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void mod_spmi_driver_send_command_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_spmi_driver_send_command_StopIgnore() mod_spmi_driver_send_command_CMockStopIgnore()
void mod_spmi_driver_send_command_CMockStopIgnore(void);
#define mod_spmi_driver_send_command_ExpectAnyArgsAndReturn(cmock_retval) mod_spmi_driver_send_command_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void mod_spmi_driver_send_command_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define mod_spmi_driver_send_command_ExpectAndReturn(dev_id, request, cmock_retval) mod_spmi_driver_send_command_CMockExpectAndReturn(__LINE__, dev_id, request, cmock_retval)
void mod_spmi_driver_send_command_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t dev_id, struct mod_spmi_request* request, int cmock_to_return);
typedef int (* CMOCK_mod_spmi_driver_send_command_CALLBACK)(fwk_id_t dev_id, struct mod_spmi_request* request, int cmock_num_calls);
void mod_spmi_driver_send_command_AddCallback(CMOCK_mod_spmi_driver_send_command_CALLBACK Callback);
void mod_spmi_driver_send_command_Stub(CMOCK_mod_spmi_driver_send_command_CALLBACK Callback);
#define mod_spmi_driver_send_command_StubWithCallback mod_spmi_driver_send_command_Stub
#define mod_spmi_driver_send_command_ExpectWithArrayAndReturn(dev_id, request, request_Depth, cmock_retval) mod_spmi_driver_send_command_CMockExpectWithArrayAndReturn(__LINE__, dev_id, request, request_Depth, cmock_retval)
void mod_spmi_driver_send_command_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, fwk_id_t dev_id, struct mod_spmi_request* request, int request_Depth, int cmock_to_return);
#define mod_spmi_driver_send_command_ReturnThruPtr_request(request) mod_spmi_driver_send_command_CMockReturnMemThruPtr_request(__LINE__, request, sizeof(struct mod_spmi_request))
#define mod_spmi_driver_send_command_ReturnArrayThruPtr_request(request, cmock_len) mod_spmi_driver_send_command_CMockReturnMemThruPtr_request(__LINE__, request, cmock_len * sizeof(*request))
#define mod_spmi_driver_send_command_ReturnMemThruPtr_request(request, cmock_size) mod_spmi_driver_send_command_CMockReturnMemThruPtr_request(__LINE__, request, cmock_size)
void mod_spmi_driver_send_command_CMockReturnMemThruPtr_request(UNITY_LINE_TYPE cmock_line, struct mod_spmi_request* request, size_t cmock_size);
#define mod_spmi_driver_send_command_IgnoreArg_dev_id() mod_spmi_driver_send_command_CMockIgnoreArg_dev_id(__LINE__)
void mod_spmi_driver_send_command_CMockIgnoreArg_dev_id(UNITY_LINE_TYPE cmock_line);
#define mod_spmi_driver_send_command_IgnoreArg_request() mod_spmi_driver_send_command_CMockIgnoreArg_request(__LINE__)
void mod_spmi_driver_send_command_CMockIgnoreArg_request(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
