/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMOD_CCSM_EXTRA_H
#define _MOCKMOD_CCSM_EXTRA_H

#include "unity.h"
#include "mod_ccsm_extra.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockmod_ccsm_extra_Init(void);
void Mockmod_ccsm_extra_Destroy(void);
void Mockmod_ccsm_extra_Verify(void);




#define ccsm_drv_get_pll_static_settings_IgnoreAndReturn(cmock_retval) ccsm_drv_get_pll_static_settings_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_pll_static_settings_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_pll_static_settings_StopIgnore() ccsm_drv_get_pll_static_settings_CMockStopIgnore()
void ccsm_drv_get_pll_static_settings_CMockStopIgnore(void);
#define ccsm_drv_get_pll_static_settings_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_pll_static_settings_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_pll_static_settings_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_pll_static_settings_ExpectAndReturn(reg, pll_select, config, cmock_retval) ccsm_drv_get_pll_static_settings_CMockExpectAndReturn(__LINE__, reg, pll_select, config, cmock_retval)
void ccsm_drv_get_pll_static_settings_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, enum mod_ccsm_pll_static_select pll_select, uint32_t* config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_pll_static_settings_CALLBACK)(struct ccsm_reg* reg, enum mod_ccsm_pll_static_select pll_select, uint32_t* config, int cmock_num_calls);
void ccsm_drv_get_pll_static_settings_AddCallback(CMOCK_ccsm_drv_get_pll_static_settings_CALLBACK Callback);
void ccsm_drv_get_pll_static_settings_Stub(CMOCK_ccsm_drv_get_pll_static_settings_CALLBACK Callback);
#define ccsm_drv_get_pll_static_settings_StubWithCallback ccsm_drv_get_pll_static_settings_Stub
#define ccsm_drv_get_pll_static_settings_ExpectWithArrayAndReturn(reg, reg_Depth, pll_select, config, config_Depth, cmock_retval) ccsm_drv_get_pll_static_settings_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, pll_select, config, config_Depth, cmock_retval)
void ccsm_drv_get_pll_static_settings_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, enum mod_ccsm_pll_static_select pll_select, uint32_t* config, int config_Depth, int cmock_to_return);
#define ccsm_drv_get_pll_static_settings_ReturnThruPtr_reg(reg) ccsm_drv_get_pll_static_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_get_pll_static_settings_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_get_pll_static_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_get_pll_static_settings_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_get_pll_static_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_get_pll_static_settings_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_get_pll_static_settings_ReturnThruPtr_config(config) ccsm_drv_get_pll_static_settings_CMockReturnMemThruPtr_config(__LINE__, config, sizeof(uint32_t))
#define ccsm_drv_get_pll_static_settings_ReturnArrayThruPtr_config(config, cmock_len) ccsm_drv_get_pll_static_settings_CMockReturnMemThruPtr_config(__LINE__, config, cmock_len * sizeof(*config))
#define ccsm_drv_get_pll_static_settings_ReturnMemThruPtr_config(config, cmock_size) ccsm_drv_get_pll_static_settings_CMockReturnMemThruPtr_config(__LINE__, config, cmock_size)
void ccsm_drv_get_pll_static_settings_CMockReturnMemThruPtr_config(UNITY_LINE_TYPE cmock_line, uint32_t* config, size_t cmock_size);
#define ccsm_drv_get_pll_static_settings_IgnoreArg_reg() ccsm_drv_get_pll_static_settings_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_get_pll_static_settings_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_pll_static_settings_IgnoreArg_pll_select() ccsm_drv_get_pll_static_settings_CMockIgnoreArg_pll_select(__LINE__)
void ccsm_drv_get_pll_static_settings_CMockIgnoreArg_pll_select(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_pll_static_settings_IgnoreArg_config() ccsm_drv_get_pll_static_settings_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_get_pll_static_settings_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_pll_dynamic_settings_IgnoreAndReturn(cmock_retval) ccsm_drv_get_pll_dynamic_settings_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_pll_dynamic_settings_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_pll_dynamic_settings_StopIgnore() ccsm_drv_get_pll_dynamic_settings_CMockStopIgnore()
void ccsm_drv_get_pll_dynamic_settings_CMockStopIgnore(void);
#define ccsm_drv_get_pll_dynamic_settings_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_pll_dynamic_settings_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_pll_dynamic_settings_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_pll_dynamic_settings_ExpectAndReturn(reg, pll_select, config0, config1, cmock_retval) ccsm_drv_get_pll_dynamic_settings_CMockExpectAndReturn(__LINE__, reg, pll_select, config0, config1, cmock_retval)
void ccsm_drv_get_pll_dynamic_settings_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, enum mod_ccsm_pll_dynamic_select pll_select, uint32_t* config0, uint32_t* config1, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_pll_dynamic_settings_CALLBACK)(struct ccsm_reg* reg, enum mod_ccsm_pll_dynamic_select pll_select, uint32_t* config0, uint32_t* config1, int cmock_num_calls);
void ccsm_drv_get_pll_dynamic_settings_AddCallback(CMOCK_ccsm_drv_get_pll_dynamic_settings_CALLBACK Callback);
void ccsm_drv_get_pll_dynamic_settings_Stub(CMOCK_ccsm_drv_get_pll_dynamic_settings_CALLBACK Callback);
#define ccsm_drv_get_pll_dynamic_settings_StubWithCallback ccsm_drv_get_pll_dynamic_settings_Stub
#define ccsm_drv_get_pll_dynamic_settings_ExpectWithArrayAndReturn(reg, reg_Depth, pll_select, config0, config0_Depth, config1, config1_Depth, cmock_retval) ccsm_drv_get_pll_dynamic_settings_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, pll_select, config0, config0_Depth, config1, config1_Depth, cmock_retval)
void ccsm_drv_get_pll_dynamic_settings_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, enum mod_ccsm_pll_dynamic_select pll_select, uint32_t* config0, int config0_Depth, uint32_t* config1, int config1_Depth, int cmock_to_return);
#define ccsm_drv_get_pll_dynamic_settings_ReturnThruPtr_reg(reg) ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_get_pll_dynamic_settings_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_get_pll_dynamic_settings_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_get_pll_dynamic_settings_ReturnThruPtr_config0(config0) ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_config0(__LINE__, config0, sizeof(uint32_t))
#define ccsm_drv_get_pll_dynamic_settings_ReturnArrayThruPtr_config0(config0, cmock_len) ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_config0(__LINE__, config0, cmock_len * sizeof(*config0))
#define ccsm_drv_get_pll_dynamic_settings_ReturnMemThruPtr_config0(config0, cmock_size) ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_config0(__LINE__, config0, cmock_size)
void ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_config0(UNITY_LINE_TYPE cmock_line, uint32_t* config0, size_t cmock_size);
#define ccsm_drv_get_pll_dynamic_settings_ReturnThruPtr_config1(config1) ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_config1(__LINE__, config1, sizeof(uint32_t))
#define ccsm_drv_get_pll_dynamic_settings_ReturnArrayThruPtr_config1(config1, cmock_len) ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_config1(__LINE__, config1, cmock_len * sizeof(*config1))
#define ccsm_drv_get_pll_dynamic_settings_ReturnMemThruPtr_config1(config1, cmock_size) ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_config1(__LINE__, config1, cmock_size)
void ccsm_drv_get_pll_dynamic_settings_CMockReturnMemThruPtr_config1(UNITY_LINE_TYPE cmock_line, uint32_t* config1, size_t cmock_size);
#define ccsm_drv_get_pll_dynamic_settings_IgnoreArg_reg() ccsm_drv_get_pll_dynamic_settings_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_get_pll_dynamic_settings_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_pll_dynamic_settings_IgnoreArg_pll_select() ccsm_drv_get_pll_dynamic_settings_CMockIgnoreArg_pll_select(__LINE__)
void ccsm_drv_get_pll_dynamic_settings_CMockIgnoreArg_pll_select(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_pll_dynamic_settings_IgnoreArg_config0() ccsm_drv_get_pll_dynamic_settings_CMockIgnoreArg_config0(__LINE__)
void ccsm_drv_get_pll_dynamic_settings_CMockIgnoreArg_config0(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_pll_dynamic_settings_IgnoreArg_config1() ccsm_drv_get_pll_dynamic_settings_CMockIgnoreArg_config1(__LINE__)
void ccsm_drv_get_pll_dynamic_settings_CMockIgnoreArg_config1(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_static_settings_IgnoreAndReturn(cmock_retval) ccsm_drv_set_pll_static_settings_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_pll_static_settings_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_pll_static_settings_StopIgnore() ccsm_drv_set_pll_static_settings_CMockStopIgnore()
void ccsm_drv_set_pll_static_settings_CMockStopIgnore(void);
#define ccsm_drv_set_pll_static_settings_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_set_pll_static_settings_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_pll_static_settings_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_pll_static_settings_ExpectAndReturn(reg, pll_select, config, cmock_retval) ccsm_drv_set_pll_static_settings_CMockExpectAndReturn(__LINE__, reg, pll_select, config, cmock_retval)
void ccsm_drv_set_pll_static_settings_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, enum mod_ccsm_pll_static_select pll_select, uint32_t config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_set_pll_static_settings_CALLBACK)(struct ccsm_reg* reg, enum mod_ccsm_pll_static_select pll_select, uint32_t config, int cmock_num_calls);
void ccsm_drv_set_pll_static_settings_AddCallback(CMOCK_ccsm_drv_set_pll_static_settings_CALLBACK Callback);
void ccsm_drv_set_pll_static_settings_Stub(CMOCK_ccsm_drv_set_pll_static_settings_CALLBACK Callback);
#define ccsm_drv_set_pll_static_settings_StubWithCallback ccsm_drv_set_pll_static_settings_Stub
#define ccsm_drv_set_pll_static_settings_ExpectWithArrayAndReturn(reg, reg_Depth, pll_select, config, cmock_retval) ccsm_drv_set_pll_static_settings_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, pll_select, config, cmock_retval)
void ccsm_drv_set_pll_static_settings_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, enum mod_ccsm_pll_static_select pll_select, uint32_t config, int cmock_to_return);
#define ccsm_drv_set_pll_static_settings_ReturnThruPtr_reg(reg) ccsm_drv_set_pll_static_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_set_pll_static_settings_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_set_pll_static_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_set_pll_static_settings_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_set_pll_static_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_set_pll_static_settings_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_set_pll_static_settings_IgnoreArg_reg() ccsm_drv_set_pll_static_settings_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_set_pll_static_settings_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_static_settings_IgnoreArg_pll_select() ccsm_drv_set_pll_static_settings_CMockIgnoreArg_pll_select(__LINE__)
void ccsm_drv_set_pll_static_settings_CMockIgnoreArg_pll_select(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_static_settings_IgnoreArg_config() ccsm_drv_set_pll_static_settings_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_set_pll_static_settings_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_dynamic_settings_IgnoreAndReturn(cmock_retval) ccsm_drv_set_pll_dynamic_settings_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_pll_dynamic_settings_StopIgnore() ccsm_drv_set_pll_dynamic_settings_CMockStopIgnore()
void ccsm_drv_set_pll_dynamic_settings_CMockStopIgnore(void);
#define ccsm_drv_set_pll_dynamic_settings_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_set_pll_dynamic_settings_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_pll_dynamic_settings_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_pll_dynamic_settings_ExpectAndReturn(reg, pll_select, config0, config1, cmock_retval) ccsm_drv_set_pll_dynamic_settings_CMockExpectAndReturn(__LINE__, reg, pll_select, config0, config1, cmock_retval)
void ccsm_drv_set_pll_dynamic_settings_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, enum mod_ccsm_pll_dynamic_select pll_select, uint32_t config0, uint32_t config1, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_set_pll_dynamic_settings_CALLBACK)(struct ccsm_reg* reg, enum mod_ccsm_pll_dynamic_select pll_select, uint32_t config0, uint32_t config1, int cmock_num_calls);
void ccsm_drv_set_pll_dynamic_settings_AddCallback(CMOCK_ccsm_drv_set_pll_dynamic_settings_CALLBACK Callback);
void ccsm_drv_set_pll_dynamic_settings_Stub(CMOCK_ccsm_drv_set_pll_dynamic_settings_CALLBACK Callback);
#define ccsm_drv_set_pll_dynamic_settings_StubWithCallback ccsm_drv_set_pll_dynamic_settings_Stub
#define ccsm_drv_set_pll_dynamic_settings_ExpectWithArrayAndReturn(reg, reg_Depth, pll_select, config0, config1, cmock_retval) ccsm_drv_set_pll_dynamic_settings_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, pll_select, config0, config1, cmock_retval)
void ccsm_drv_set_pll_dynamic_settings_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, enum mod_ccsm_pll_dynamic_select pll_select, uint32_t config0, uint32_t config1, int cmock_to_return);
#define ccsm_drv_set_pll_dynamic_settings_ReturnThruPtr_reg(reg) ccsm_drv_set_pll_dynamic_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_set_pll_dynamic_settings_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_set_pll_dynamic_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_set_pll_dynamic_settings_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_set_pll_dynamic_settings_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_set_pll_dynamic_settings_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_set_pll_dynamic_settings_IgnoreArg_reg() ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_dynamic_settings_IgnoreArg_pll_select() ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_pll_select(__LINE__)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_pll_select(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_dynamic_settings_IgnoreArg_config0() ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_config0(__LINE__)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_config0(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_pll_dynamic_settings_IgnoreArg_config1() ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_config1(__LINE__)
void ccsm_drv_set_pll_dynamic_settings_CMockIgnoreArg_config1(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_configuration_IgnoreAndReturn(cmock_retval) ccsm_drv_get_dm_configuration_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_dm_configuration_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_dm_configuration_StopIgnore() ccsm_drv_get_dm_configuration_CMockStopIgnore()
void ccsm_drv_get_dm_configuration_CMockStopIgnore(void);
#define ccsm_drv_get_dm_configuration_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_dm_configuration_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_dm_configuration_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_dm_configuration_ExpectAndReturn(reg, config, cmock_retval) ccsm_drv_get_dm_configuration_CMockExpectAndReturn(__LINE__, reg, config, cmock_retval)
void ccsm_drv_get_dm_configuration_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, uint32_t* config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_dm_configuration_CALLBACK)(struct ccsm_reg* reg, uint32_t* config, int cmock_num_calls);
void ccsm_drv_get_dm_configuration_AddCallback(CMOCK_ccsm_drv_get_dm_configuration_CALLBACK Callback);
void ccsm_drv_get_dm_configuration_Stub(CMOCK_ccsm_drv_get_dm_configuration_CALLBACK Callback);
#define ccsm_drv_get_dm_configuration_StubWithCallback ccsm_drv_get_dm_configuration_Stub
#define ccsm_drv_get_dm_configuration_ExpectWithArrayAndReturn(reg, reg_Depth, config, config_Depth, cmock_retval) ccsm_drv_get_dm_configuration_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, config, config_Depth, cmock_retval)
void ccsm_drv_get_dm_configuration_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, uint32_t* config, int config_Depth, int cmock_to_return);
#define ccsm_drv_get_dm_configuration_ReturnThruPtr_reg(reg) ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_get_dm_configuration_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_get_dm_configuration_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_get_dm_configuration_ReturnThruPtr_config(config) ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_config(__LINE__, config, sizeof(uint32_t))
#define ccsm_drv_get_dm_configuration_ReturnArrayThruPtr_config(config, cmock_len) ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_config(__LINE__, config, cmock_len * sizeof(*config))
#define ccsm_drv_get_dm_configuration_ReturnMemThruPtr_config(config, cmock_size) ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_config(__LINE__, config, cmock_size)
void ccsm_drv_get_dm_configuration_CMockReturnMemThruPtr_config(UNITY_LINE_TYPE cmock_line, uint32_t* config, size_t cmock_size);
#define ccsm_drv_get_dm_configuration_IgnoreArg_reg() ccsm_drv_get_dm_configuration_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_get_dm_configuration_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_configuration_IgnoreArg_config() ccsm_drv_get_dm_configuration_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_get_dm_configuration_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_telemetry_IgnoreAndReturn(cmock_retval) ccsm_drv_get_dm_telemetry_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_dm_telemetry_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_dm_telemetry_StopIgnore() ccsm_drv_get_dm_telemetry_CMockStopIgnore()
void ccsm_drv_get_dm_telemetry_CMockStopIgnore(void);
#define ccsm_drv_get_dm_telemetry_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_dm_telemetry_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_dm_telemetry_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_dm_telemetry_ExpectAndReturn(reg, telemetry1, telemetry2, telemetry3, cmock_retval) ccsm_drv_get_dm_telemetry_CMockExpectAndReturn(__LINE__, reg, telemetry1, telemetry2, telemetry3, cmock_retval)
void ccsm_drv_get_dm_telemetry_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, uint32_t* telemetry1, uint32_t* telemetry2, uint32_t* telemetry3, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_dm_telemetry_CALLBACK)(struct ccsm_reg* reg, uint32_t* telemetry1, uint32_t* telemetry2, uint32_t* telemetry3, int cmock_num_calls);
void ccsm_drv_get_dm_telemetry_AddCallback(CMOCK_ccsm_drv_get_dm_telemetry_CALLBACK Callback);
void ccsm_drv_get_dm_telemetry_Stub(CMOCK_ccsm_drv_get_dm_telemetry_CALLBACK Callback);
#define ccsm_drv_get_dm_telemetry_StubWithCallback ccsm_drv_get_dm_telemetry_Stub
#define ccsm_drv_get_dm_telemetry_ExpectWithArrayAndReturn(reg, reg_Depth, telemetry1, telemetry1_Depth, telemetry2, telemetry2_Depth, telemetry3, telemetry3_Depth, cmock_retval) ccsm_drv_get_dm_telemetry_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, telemetry1, telemetry1_Depth, telemetry2, telemetry2_Depth, telemetry3, telemetry3_Depth, cmock_retval)
void ccsm_drv_get_dm_telemetry_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, uint32_t* telemetry1, int telemetry1_Depth, uint32_t* telemetry2, int telemetry2_Depth, uint32_t* telemetry3, int telemetry3_Depth, int cmock_to_return);
#define ccsm_drv_get_dm_telemetry_ReturnThruPtr_reg(reg) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_get_dm_telemetry_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_get_dm_telemetry_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_get_dm_telemetry_ReturnThruPtr_telemetry1(telemetry1) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry1(__LINE__, telemetry1, sizeof(uint32_t))
#define ccsm_drv_get_dm_telemetry_ReturnArrayThruPtr_telemetry1(telemetry1, cmock_len) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry1(__LINE__, telemetry1, cmock_len * sizeof(*telemetry1))
#define ccsm_drv_get_dm_telemetry_ReturnMemThruPtr_telemetry1(telemetry1, cmock_size) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry1(__LINE__, telemetry1, cmock_size)
void ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry1(UNITY_LINE_TYPE cmock_line, uint32_t* telemetry1, size_t cmock_size);
#define ccsm_drv_get_dm_telemetry_ReturnThruPtr_telemetry2(telemetry2) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry2(__LINE__, telemetry2, sizeof(uint32_t))
#define ccsm_drv_get_dm_telemetry_ReturnArrayThruPtr_telemetry2(telemetry2, cmock_len) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry2(__LINE__, telemetry2, cmock_len * sizeof(*telemetry2))
#define ccsm_drv_get_dm_telemetry_ReturnMemThruPtr_telemetry2(telemetry2, cmock_size) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry2(__LINE__, telemetry2, cmock_size)
void ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry2(UNITY_LINE_TYPE cmock_line, uint32_t* telemetry2, size_t cmock_size);
#define ccsm_drv_get_dm_telemetry_ReturnThruPtr_telemetry3(telemetry3) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry3(__LINE__, telemetry3, sizeof(uint32_t))
#define ccsm_drv_get_dm_telemetry_ReturnArrayThruPtr_telemetry3(telemetry3, cmock_len) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry3(__LINE__, telemetry3, cmock_len * sizeof(*telemetry3))
#define ccsm_drv_get_dm_telemetry_ReturnMemThruPtr_telemetry3(telemetry3, cmock_size) ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry3(__LINE__, telemetry3, cmock_size)
void ccsm_drv_get_dm_telemetry_CMockReturnMemThruPtr_telemetry3(UNITY_LINE_TYPE cmock_line, uint32_t* telemetry3, size_t cmock_size);
#define ccsm_drv_get_dm_telemetry_IgnoreArg_reg() ccsm_drv_get_dm_telemetry_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_get_dm_telemetry_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_telemetry_IgnoreArg_telemetry1() ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry1(__LINE__)
void ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry1(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_telemetry_IgnoreArg_telemetry2() ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry2(__LINE__)
void ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry2(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_dm_telemetry_IgnoreArg_telemetry3() ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry3(__LINE__)
void ccsm_drv_get_dm_telemetry_CMockIgnoreArg_telemetry3(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_dm_configuration_IgnoreAndReturn(cmock_retval) ccsm_drv_set_dm_configuration_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_dm_configuration_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_dm_configuration_StopIgnore() ccsm_drv_set_dm_configuration_CMockStopIgnore()
void ccsm_drv_set_dm_configuration_CMockStopIgnore(void);
#define ccsm_drv_set_dm_configuration_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_set_dm_configuration_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_dm_configuration_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_dm_configuration_ExpectAndReturn(reg, config, cmock_retval) ccsm_drv_set_dm_configuration_CMockExpectAndReturn(__LINE__, reg, config, cmock_retval)
void ccsm_drv_set_dm_configuration_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, uint32_t config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_set_dm_configuration_CALLBACK)(struct ccsm_reg* reg, uint32_t config, int cmock_num_calls);
void ccsm_drv_set_dm_configuration_AddCallback(CMOCK_ccsm_drv_set_dm_configuration_CALLBACK Callback);
void ccsm_drv_set_dm_configuration_Stub(CMOCK_ccsm_drv_set_dm_configuration_CALLBACK Callback);
#define ccsm_drv_set_dm_configuration_StubWithCallback ccsm_drv_set_dm_configuration_Stub
#define ccsm_drv_set_dm_configuration_ExpectWithArrayAndReturn(reg, reg_Depth, config, cmock_retval) ccsm_drv_set_dm_configuration_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, config, cmock_retval)
void ccsm_drv_set_dm_configuration_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, uint32_t config, int cmock_to_return);
#define ccsm_drv_set_dm_configuration_ReturnThruPtr_reg(reg) ccsm_drv_set_dm_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_set_dm_configuration_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_set_dm_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_set_dm_configuration_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_set_dm_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_set_dm_configuration_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_set_dm_configuration_IgnoreArg_reg() ccsm_drv_set_dm_configuration_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_set_dm_configuration_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_dm_configuration_IgnoreArg_config() ccsm_drv_set_dm_configuration_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_set_dm_configuration_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_mod_configuration_IgnoreAndReturn(cmock_retval) ccsm_drv_get_mod_configuration_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_mod_configuration_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_mod_configuration_StopIgnore() ccsm_drv_get_mod_configuration_CMockStopIgnore()
void ccsm_drv_get_mod_configuration_CMockStopIgnore(void);
#define ccsm_drv_get_mod_configuration_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_mod_configuration_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_mod_configuration_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_mod_configuration_ExpectAndReturn(reg, core_id, config, cmock_retval) ccsm_drv_get_mod_configuration_CMockExpectAndReturn(__LINE__, reg, core_id, config, cmock_retval)
void ccsm_drv_get_mod_configuration_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, enum mod_ccsm_mod_select core_id, uint32_t* config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_mod_configuration_CALLBACK)(struct ccsm_reg* reg, enum mod_ccsm_mod_select core_id, uint32_t* config, int cmock_num_calls);
void ccsm_drv_get_mod_configuration_AddCallback(CMOCK_ccsm_drv_get_mod_configuration_CALLBACK Callback);
void ccsm_drv_get_mod_configuration_Stub(CMOCK_ccsm_drv_get_mod_configuration_CALLBACK Callback);
#define ccsm_drv_get_mod_configuration_StubWithCallback ccsm_drv_get_mod_configuration_Stub
#define ccsm_drv_get_mod_configuration_ExpectWithArrayAndReturn(reg, reg_Depth, core_id, config, config_Depth, cmock_retval) ccsm_drv_get_mod_configuration_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, core_id, config, config_Depth, cmock_retval)
void ccsm_drv_get_mod_configuration_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, enum mod_ccsm_mod_select core_id, uint32_t* config, int config_Depth, int cmock_to_return);
#define ccsm_drv_get_mod_configuration_ReturnThruPtr_reg(reg) ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_get_mod_configuration_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_get_mod_configuration_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_get_mod_configuration_ReturnThruPtr_config(config) ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_config(__LINE__, config, sizeof(uint32_t))
#define ccsm_drv_get_mod_configuration_ReturnArrayThruPtr_config(config, cmock_len) ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_config(__LINE__, config, cmock_len * sizeof(*config))
#define ccsm_drv_get_mod_configuration_ReturnMemThruPtr_config(config, cmock_size) ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_config(__LINE__, config, cmock_size)
void ccsm_drv_get_mod_configuration_CMockReturnMemThruPtr_config(UNITY_LINE_TYPE cmock_line, uint32_t* config, size_t cmock_size);
#define ccsm_drv_get_mod_configuration_IgnoreArg_reg() ccsm_drv_get_mod_configuration_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_get_mod_configuration_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_mod_configuration_IgnoreArg_core_id() ccsm_drv_get_mod_configuration_CMockIgnoreArg_core_id(__LINE__)
void ccsm_drv_get_mod_configuration_CMockIgnoreArg_core_id(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_mod_configuration_IgnoreArg_config() ccsm_drv_get_mod_configuration_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_get_mod_configuration_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_mod_configuration_IgnoreAndReturn(cmock_retval) ccsm_drv_set_mod_configuration_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_mod_configuration_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_mod_configuration_StopIgnore() ccsm_drv_set_mod_configuration_CMockStopIgnore()
void ccsm_drv_set_mod_configuration_CMockStopIgnore(void);
#define ccsm_drv_set_mod_configuration_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_set_mod_configuration_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_mod_configuration_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_mod_configuration_ExpectAndReturn(reg, core_id, config, cmock_retval) ccsm_drv_set_mod_configuration_CMockExpectAndReturn(__LINE__, reg, core_id, config, cmock_retval)
void ccsm_drv_set_mod_configuration_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, enum mod_ccsm_mod_select core_id, uint32_t config, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_set_mod_configuration_CALLBACK)(struct ccsm_reg* reg, enum mod_ccsm_mod_select core_id, uint32_t config, int cmock_num_calls);
void ccsm_drv_set_mod_configuration_AddCallback(CMOCK_ccsm_drv_set_mod_configuration_CALLBACK Callback);
void ccsm_drv_set_mod_configuration_Stub(CMOCK_ccsm_drv_set_mod_configuration_CALLBACK Callback);
#define ccsm_drv_set_mod_configuration_StubWithCallback ccsm_drv_set_mod_configuration_Stub
#define ccsm_drv_set_mod_configuration_ExpectWithArrayAndReturn(reg, reg_Depth, core_id, config, cmock_retval) ccsm_drv_set_mod_configuration_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, core_id, config, cmock_retval)
void ccsm_drv_set_mod_configuration_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, enum mod_ccsm_mod_select core_id, uint32_t config, int cmock_to_return);
#define ccsm_drv_set_mod_configuration_ReturnThruPtr_reg(reg) ccsm_drv_set_mod_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_set_mod_configuration_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_set_mod_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_set_mod_configuration_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_set_mod_configuration_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_set_mod_configuration_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_set_mod_configuration_IgnoreArg_reg() ccsm_drv_set_mod_configuration_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_set_mod_configuration_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_mod_configuration_IgnoreArg_core_id() ccsm_drv_set_mod_configuration_CMockIgnoreArg_core_id(__LINE__)
void ccsm_drv_set_mod_configuration_CMockIgnoreArg_core_id(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_mod_configuration_IgnoreArg_config() ccsm_drv_set_mod_configuration_CMockIgnoreArg_config(__LINE__)
void ccsm_drv_set_mod_configuration_CMockIgnoreArg_config(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_is_irq_error_clear_IgnoreAndReturn(cmock_retval) ccsm_drv_is_irq_error_clear_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_is_irq_error_clear_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define ccsm_drv_is_irq_error_clear_StopIgnore() ccsm_drv_is_irq_error_clear_CMockStopIgnore()
void ccsm_drv_is_irq_error_clear_CMockStopIgnore(void);
#define ccsm_drv_is_irq_error_clear_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_is_irq_error_clear_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_is_irq_error_clear_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define ccsm_drv_is_irq_error_clear_ExpectAndReturn(reg, cmock_retval) ccsm_drv_is_irq_error_clear_CMockExpectAndReturn(__LINE__, reg, cmock_retval)
void ccsm_drv_is_irq_error_clear_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* reg, bool cmock_to_return);
typedef bool (* CMOCK_ccsm_drv_is_irq_error_clear_CALLBACK)(void* reg, int cmock_num_calls);
void ccsm_drv_is_irq_error_clear_AddCallback(CMOCK_ccsm_drv_is_irq_error_clear_CALLBACK Callback);
void ccsm_drv_is_irq_error_clear_Stub(CMOCK_ccsm_drv_is_irq_error_clear_CALLBACK Callback);
#define ccsm_drv_is_irq_error_clear_StubWithCallback ccsm_drv_is_irq_error_clear_Stub
#define ccsm_drv_is_irq_error_clear_ExpectWithArrayAndReturn(reg, reg_Depth, cmock_retval) ccsm_drv_is_irq_error_clear_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, cmock_retval)
void ccsm_drv_is_irq_error_clear_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, void* reg, int reg_Depth, bool cmock_to_return);
#define ccsm_drv_is_irq_error_clear_ReturnThruPtr_reg(reg) ccsm_drv_is_irq_error_clear_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(void))
#define ccsm_drv_is_irq_error_clear_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_is_irq_error_clear_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_is_irq_error_clear_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_is_irq_error_clear_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_is_irq_error_clear_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, void* reg, size_t cmock_size);
#define ccsm_drv_is_irq_error_clear_IgnoreArg_reg() ccsm_drv_is_irq_error_clear_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_is_irq_error_clear_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_clear_irq_error_IgnoreAndReturn(cmock_retval) ccsm_drv_get_clear_irq_error_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_clear_irq_error_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_clear_irq_error_StopIgnore() ccsm_drv_get_clear_irq_error_CMockStopIgnore()
void ccsm_drv_get_clear_irq_error_CMockStopIgnore(void);
#define ccsm_drv_get_clear_irq_error_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_clear_irq_error_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_clear_irq_error_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_clear_irq_error_ExpectAndReturn(reg, error, cmock_retval) ccsm_drv_get_clear_irq_error_CMockExpectAndReturn(__LINE__, reg, error, cmock_retval)
void ccsm_drv_get_clear_irq_error_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, uint32_t* error, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_clear_irq_error_CALLBACK)(struct ccsm_reg* reg, uint32_t* error, int cmock_num_calls);
void ccsm_drv_get_clear_irq_error_AddCallback(CMOCK_ccsm_drv_get_clear_irq_error_CALLBACK Callback);
void ccsm_drv_get_clear_irq_error_Stub(CMOCK_ccsm_drv_get_clear_irq_error_CALLBACK Callback);
#define ccsm_drv_get_clear_irq_error_StubWithCallback ccsm_drv_get_clear_irq_error_Stub
#define ccsm_drv_get_clear_irq_error_ExpectWithArrayAndReturn(reg, reg_Depth, error, error_Depth, cmock_retval) ccsm_drv_get_clear_irq_error_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, error, error_Depth, cmock_retval)
void ccsm_drv_get_clear_irq_error_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, uint32_t* error, int error_Depth, int cmock_to_return);
#define ccsm_drv_get_clear_irq_error_ReturnThruPtr_reg(reg) ccsm_drv_get_clear_irq_error_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_get_clear_irq_error_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_get_clear_irq_error_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_get_clear_irq_error_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_get_clear_irq_error_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_get_clear_irq_error_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_get_clear_irq_error_ReturnThruPtr_error(error) ccsm_drv_get_clear_irq_error_CMockReturnMemThruPtr_error(__LINE__, error, sizeof(uint32_t))
#define ccsm_drv_get_clear_irq_error_ReturnArrayThruPtr_error(error, cmock_len) ccsm_drv_get_clear_irq_error_CMockReturnMemThruPtr_error(__LINE__, error, cmock_len * sizeof(*error))
#define ccsm_drv_get_clear_irq_error_ReturnMemThruPtr_error(error, cmock_size) ccsm_drv_get_clear_irq_error_CMockReturnMemThruPtr_error(__LINE__, error, cmock_size)
void ccsm_drv_get_clear_irq_error_CMockReturnMemThruPtr_error(UNITY_LINE_TYPE cmock_line, uint32_t* error, size_t cmock_size);
#define ccsm_drv_get_clear_irq_error_IgnoreArg_reg() ccsm_drv_get_clear_irq_error_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_get_clear_irq_error_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_clear_irq_error_IgnoreArg_error() ccsm_drv_get_clear_irq_error_CMockIgnoreArg_error(__LINE__)
void ccsm_drv_get_clear_irq_error_CMockIgnoreArg_error(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_is_irq_status_clear_IgnoreAndReturn(cmock_retval) ccsm_drv_is_irq_status_clear_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_is_irq_status_clear_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define ccsm_drv_is_irq_status_clear_StopIgnore() ccsm_drv_is_irq_status_clear_CMockStopIgnore()
void ccsm_drv_is_irq_status_clear_CMockStopIgnore(void);
#define ccsm_drv_is_irq_status_clear_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_is_irq_status_clear_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_is_irq_status_clear_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define ccsm_drv_is_irq_status_clear_ExpectAndReturn(reg, cmock_retval) ccsm_drv_is_irq_status_clear_CMockExpectAndReturn(__LINE__, reg, cmock_retval)
void ccsm_drv_is_irq_status_clear_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* reg, bool cmock_to_return);
typedef bool (* CMOCK_ccsm_drv_is_irq_status_clear_CALLBACK)(void* reg, int cmock_num_calls);
void ccsm_drv_is_irq_status_clear_AddCallback(CMOCK_ccsm_drv_is_irq_status_clear_CALLBACK Callback);
void ccsm_drv_is_irq_status_clear_Stub(CMOCK_ccsm_drv_is_irq_status_clear_CALLBACK Callback);
#define ccsm_drv_is_irq_status_clear_StubWithCallback ccsm_drv_is_irq_status_clear_Stub
#define ccsm_drv_is_irq_status_clear_ExpectWithArrayAndReturn(reg, reg_Depth, cmock_retval) ccsm_drv_is_irq_status_clear_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, cmock_retval)
void ccsm_drv_is_irq_status_clear_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, void* reg, int reg_Depth, bool cmock_to_return);
#define ccsm_drv_is_irq_status_clear_ReturnThruPtr_reg(reg) ccsm_drv_is_irq_status_clear_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(void))
#define ccsm_drv_is_irq_status_clear_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_is_irq_status_clear_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_is_irq_status_clear_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_is_irq_status_clear_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_is_irq_status_clear_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, void* reg, size_t cmock_size);
#define ccsm_drv_is_irq_status_clear_IgnoreArg_reg() ccsm_drv_is_irq_status_clear_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_is_irq_status_clear_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_clear_irq_status_IgnoreAndReturn(cmock_retval) ccsm_drv_get_clear_irq_status_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_clear_irq_status_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_clear_irq_status_StopIgnore() ccsm_drv_get_clear_irq_status_CMockStopIgnore()
void ccsm_drv_get_clear_irq_status_CMockStopIgnore(void);
#define ccsm_drv_get_clear_irq_status_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_get_clear_irq_status_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_get_clear_irq_status_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_get_clear_irq_status_ExpectAndReturn(reg, status, cmock_retval) ccsm_drv_get_clear_irq_status_CMockExpectAndReturn(__LINE__, reg, status, cmock_retval)
void ccsm_drv_get_clear_irq_status_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, uint32_t* status, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_get_clear_irq_status_CALLBACK)(struct ccsm_reg* reg, uint32_t* status, int cmock_num_calls);
void ccsm_drv_get_clear_irq_status_AddCallback(CMOCK_ccsm_drv_get_clear_irq_status_CALLBACK Callback);
void ccsm_drv_get_clear_irq_status_Stub(CMOCK_ccsm_drv_get_clear_irq_status_CALLBACK Callback);
#define ccsm_drv_get_clear_irq_status_StubWithCallback ccsm_drv_get_clear_irq_status_Stub
#define ccsm_drv_get_clear_irq_status_ExpectWithArrayAndReturn(reg, reg_Depth, status, status_Depth, cmock_retval) ccsm_drv_get_clear_irq_status_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, status, status_Depth, cmock_retval)
void ccsm_drv_get_clear_irq_status_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, uint32_t* status, int status_Depth, int cmock_to_return);
#define ccsm_drv_get_clear_irq_status_ReturnThruPtr_reg(reg) ccsm_drv_get_clear_irq_status_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_get_clear_irq_status_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_get_clear_irq_status_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_get_clear_irq_status_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_get_clear_irq_status_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_get_clear_irq_status_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_get_clear_irq_status_ReturnThruPtr_status(status) ccsm_drv_get_clear_irq_status_CMockReturnMemThruPtr_status(__LINE__, status, sizeof(uint32_t))
#define ccsm_drv_get_clear_irq_status_ReturnArrayThruPtr_status(status, cmock_len) ccsm_drv_get_clear_irq_status_CMockReturnMemThruPtr_status(__LINE__, status, cmock_len * sizeof(*status))
#define ccsm_drv_get_clear_irq_status_ReturnMemThruPtr_status(status, cmock_size) ccsm_drv_get_clear_irq_status_CMockReturnMemThruPtr_status(__LINE__, status, cmock_size)
void ccsm_drv_get_clear_irq_status_CMockReturnMemThruPtr_status(UNITY_LINE_TYPE cmock_line, uint32_t* status, size_t cmock_size);
#define ccsm_drv_get_clear_irq_status_IgnoreArg_reg() ccsm_drv_get_clear_irq_status_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_get_clear_irq_status_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_get_clear_irq_status_IgnoreArg_status() ccsm_drv_get_clear_irq_status_CMockIgnoreArg_status(__LINE__)
void ccsm_drv_get_clear_irq_status_CMockIgnoreArg_status(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_is_request_complete_IgnoreAndReturn(cmock_retval) ccsm_drv_is_request_complete_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_is_request_complete_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define ccsm_drv_is_request_complete_StopIgnore() ccsm_drv_is_request_complete_CMockStopIgnore()
void ccsm_drv_is_request_complete_CMockStopIgnore(void);
#define ccsm_drv_is_request_complete_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_is_request_complete_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_is_request_complete_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define ccsm_drv_is_request_complete_ExpectAndReturn(reg, cmock_retval) ccsm_drv_is_request_complete_CMockExpectAndReturn(__LINE__, reg, cmock_retval)
void ccsm_drv_is_request_complete_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, void* reg, bool cmock_to_return);
typedef bool (* CMOCK_ccsm_drv_is_request_complete_CALLBACK)(void* reg, int cmock_num_calls);
void ccsm_drv_is_request_complete_AddCallback(CMOCK_ccsm_drv_is_request_complete_CALLBACK Callback);
void ccsm_drv_is_request_complete_Stub(CMOCK_ccsm_drv_is_request_complete_CALLBACK Callback);
#define ccsm_drv_is_request_complete_StubWithCallback ccsm_drv_is_request_complete_Stub
#define ccsm_drv_is_request_complete_ExpectWithArrayAndReturn(reg, reg_Depth, cmock_retval) ccsm_drv_is_request_complete_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, cmock_retval)
void ccsm_drv_is_request_complete_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, void* reg, int reg_Depth, bool cmock_to_return);
#define ccsm_drv_is_request_complete_ReturnThruPtr_reg(reg) ccsm_drv_is_request_complete_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(void))
#define ccsm_drv_is_request_complete_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_is_request_complete_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_is_request_complete_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_is_request_complete_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_is_request_complete_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, void* reg, size_t cmock_size);
#define ccsm_drv_is_request_complete_IgnoreArg_reg() ccsm_drv_is_request_complete_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_is_request_complete_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_request_IgnoreAndReturn(cmock_retval) ccsm_drv_set_request_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_request_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_request_StopIgnore() ccsm_drv_set_request_CMockStopIgnore()
void ccsm_drv_set_request_CMockStopIgnore(void);
#define ccsm_drv_set_request_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_set_request_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_set_request_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_set_request_ExpectAndReturn(reg, req_type, cmock_retval) ccsm_drv_set_request_CMockExpectAndReturn(__LINE__, reg, req_type, cmock_retval)
void ccsm_drv_set_request_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, enum mod_ccsm_request_type req_type, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_set_request_CALLBACK)(struct ccsm_reg* reg, enum mod_ccsm_request_type req_type, int cmock_num_calls);
void ccsm_drv_set_request_AddCallback(CMOCK_ccsm_drv_set_request_CALLBACK Callback);
void ccsm_drv_set_request_Stub(CMOCK_ccsm_drv_set_request_CALLBACK Callback);
#define ccsm_drv_set_request_StubWithCallback ccsm_drv_set_request_Stub
#define ccsm_drv_set_request_ExpectWithArrayAndReturn(reg, reg_Depth, req_type, cmock_retval) ccsm_drv_set_request_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, req_type, cmock_retval)
void ccsm_drv_set_request_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, enum mod_ccsm_request_type req_type, int cmock_to_return);
#define ccsm_drv_set_request_ReturnThruPtr_reg(reg) ccsm_drv_set_request_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_set_request_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_set_request_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_set_request_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_set_request_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_set_request_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_set_request_IgnoreArg_reg() ccsm_drv_set_request_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_set_request_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_set_request_IgnoreArg_req_type() ccsm_drv_set_request_CMockIgnoreArg_req_type(__LINE__)
void ccsm_drv_set_request_CMockIgnoreArg_req_type(UNITY_LINE_TYPE cmock_line);
#define ccsm_drv_clear_request_IgnoreAndReturn(cmock_retval) ccsm_drv_clear_request_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ccsm_drv_clear_request_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_clear_request_StopIgnore() ccsm_drv_clear_request_CMockStopIgnore()
void ccsm_drv_clear_request_CMockStopIgnore(void);
#define ccsm_drv_clear_request_ExpectAnyArgsAndReturn(cmock_retval) ccsm_drv_clear_request_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ccsm_drv_clear_request_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define ccsm_drv_clear_request_ExpectAndReturn(reg, cmock_retval) ccsm_drv_clear_request_CMockExpectAndReturn(__LINE__, reg, cmock_retval)
void ccsm_drv_clear_request_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int cmock_to_return);
typedef int (* CMOCK_ccsm_drv_clear_request_CALLBACK)(struct ccsm_reg* reg, int cmock_num_calls);
void ccsm_drv_clear_request_AddCallback(CMOCK_ccsm_drv_clear_request_CALLBACK Callback);
void ccsm_drv_clear_request_Stub(CMOCK_ccsm_drv_clear_request_CALLBACK Callback);
#define ccsm_drv_clear_request_StubWithCallback ccsm_drv_clear_request_Stub
#define ccsm_drv_clear_request_ExpectWithArrayAndReturn(reg, reg_Depth, cmock_retval) ccsm_drv_clear_request_CMockExpectWithArrayAndReturn(__LINE__, reg, reg_Depth, cmock_retval)
void ccsm_drv_clear_request_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, int reg_Depth, int cmock_to_return);
#define ccsm_drv_clear_request_ReturnThruPtr_reg(reg) ccsm_drv_clear_request_CMockReturnMemThruPtr_reg(__LINE__, reg, sizeof(struct ccsm_reg))
#define ccsm_drv_clear_request_ReturnArrayThruPtr_reg(reg, cmock_len) ccsm_drv_clear_request_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_len * sizeof(*reg))
#define ccsm_drv_clear_request_ReturnMemThruPtr_reg(reg, cmock_size) ccsm_drv_clear_request_CMockReturnMemThruPtr_reg(__LINE__, reg, cmock_size)
void ccsm_drv_clear_request_CMockReturnMemThruPtr_reg(UNITY_LINE_TYPE cmock_line, struct ccsm_reg* reg, size_t cmock_size);
#define ccsm_drv_clear_request_IgnoreArg_reg() ccsm_drv_clear_request_CMockIgnoreArg_reg(__LINE__)
void ccsm_drv_clear_request_CMockIgnoreArg_reg(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
